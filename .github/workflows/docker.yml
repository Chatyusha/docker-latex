name: Publish Docker image
on:
  push:
    branches:
      - master
jobs:

  build:
    name: build and publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Publish
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/docker-texlive-ja:latest .
  build_x86_64:
    name: build and publish for x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build for x86_64
        run: |
          docker buildx build \
            --push \
            --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/docker-texlive-ja:latest.x86_64
            
  build_Arm64:
    name: build and publish for Arm64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Publish
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64 \
            -t ${{ secrets.DOCKER_USERNAME }}/docker-texlive-ja:latest.arm64 .
